jobs:
  - job: Build
    steps:
      # Nettoyage du rapport précédent
      - task: PowerShell@2
        displayName: "Clean Playwright Report"
        inputs:
          targetType: 'inline'
          script: |
            if (Test-Path "TestCases/playwright-report") {
              Remove-Item -Recurse -Force "TestCases/playwright-report"
            }

      # Installation des dépendances
      - task: PowerShell@2
        enabled: true
        displayName: "Install dependencies"
        inputs:
          targetType: 'inline'
          script: 'npm ci'
          workingDirectory: TestCases/

      # Exécution de Playwright avec les tests
      - task: AzureCLI@2
        displayName: Run Playwright Test
        env:
          PLAYWRIGHT_SERVICE_URL: $(PLAYWRIGHT_SERVICE_URL)
          PLAYWRIGHT_SERVICE_RUN_ID: $(Build.DefinitionName) - $(Build.BuildNumber) - $(System.JobAttempt)
        inputs:
          azureSubscription: 'LoueyZormati'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            npx playwright test --config=playwright.service.config.js --workers=2           
          addSpnToEnvironment: true

      # Vérification de l'existence du rapport et publication de l'artefact
      - task: PowerShell@2
        displayName: "Publish Playwright report"
        inputs:
          targetType: 'inline'
          script: |
            $reportPath = "TestCases/playwright-report-$(Build.BuildId)"
            if (Test-Path $reportPath) {
              Write-Host "Report exists, publishing..."
              # Publier l'artefact avec la tâche PublishPipelineArtifact
              Write-Host "##vso[artifact.upload artifactname=playwright-report;targetpath=$(Build.SourcesDirectory)/$reportPath;publishlocation=Container]"
            } else {
              Write-Host "Report does not exist, skipping publish step."
            }
